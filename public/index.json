[{"authors":null,"categories":null,"content":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.main]] menu links to it in the config.toml.\n","date":1536465600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536465600,"objectID":"c3224f3a64174f08aaf31e1f1d16ffd3","permalink":"https://kdgosik.netlify.com/tutorial/","publishdate":"2018-09-09T00:00:00-04:00","relpermalink":"/tutorial/","section":"tutorial","summary":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":[],"content":"","date":1550253348,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550253348,"objectID":"daa1b3899deb7922aeae9d6aa2856419","permalink":"https://kdgosik.netlify.com/tutorial/my-tutorial/","publishdate":"2019-02-15T12:55:48-05:00","relpermalink":"/tutorial/my-tutorial/","section":"tutorial","summary":"","tags":[],"title":"My Tutorial","type":"tutorial"},{"authors":null,"categories":["python"],"content":" SAUCIE Journal Club  Reference Biorxiv  Exploring Single-Cell Data with Deep Multitasking Neural Networks\nPreivew of the paper on biorxiv.\nDescription Our unsupervised architecture, called SAUCIE (Sparse Autoencoder for Unsupervised Clustering, Imputation, and Embedding), simultaneously performs several key tasks for single-cell data analysis including 1) clustering, 2) batch correction, 3) visualization, and 4) denoising/imputation. SAUCIE is trained to recreate its own input after reducing its dimensionality in a 2-D embedding layer which can be used to visualize the data.\nAdditionally, SAUCIE uses two novel regularizations: (1) an information dimension regularization to penalize entropy as computed on normalized activation values of the layer, and thereby encourage binary-like encodings that are amenable to clustering and (2) a Maximal Mean Discrepancy penalty to correct batch effects. Thus SAUCIE has a single architecture that denoises, batch-corrects, visualizes and clusters data using a unified representation. We show results on artificial data where ground truth is known, as well as mass cytometry data from dengue patients, and single-cell RNA-sequencing data from embryonic mouse brain.\nArchitecture SAUCIE consists of three encoding layers, an embedding layer, and then three decoding layers.\nTraining To perform multiple tasks, SAUCIE uses a single architecture as described above, but is run and optimized sequentially. The first run imputes noisy values and corrects batch effects in the original data. This preprocessed data is then run through SAUCIE again to obtain a visualization and to pick out clusters.\nThe loss function of all runs starts with a reconstruction loss Lr forcing the autoencoder to learn to reconstruct its input at the end. SAUCIE uses the standard mean-squared error loss (i.e.,\n$$L{r}(X, \\hat{X}) = \\frac{1}{n}\\Sigma^{n}{i=1}||xi − \\hat{x{i}}||^2$$\nFour key tasks:  visualization and dimensionality reduction, batch correction, clustering, and denoising and imputation.  #### Visualization/Dimensionality Reduction\n2-D bottleneck used as embeddings for visualization.\nThis regularization is computed from the visualization layer to ensure consistency across subsampled batches. The resulting total loss is then, $$ L = L_r(X, \\hat{X}) + \\lambda_b · L_b(V )$$\nBatch Correction (page13-14, 22 and 26-27)\nThe batch correction term $L_b$ calculates the Maximal Mean Discrepancy (MMD) between batches, as\n$$Lb = \\Sigma{i\\neq{ref}}MMD(V_{ref} , V_i),$$\nwhere $V_{ref}$ is the visualization layer of one of the replicates, arbitrarily chosen to be considered as a reference batch\nClustering (page 27)\nThe loss function of the clustering run then optimizes $L_r$ along with two regularization terms $L_c$ and $L_d$ that together enable SAUCIE to learn clusters:\n$$L = L_r(\\hat{X}, \\tilde{X}) + \\lambda_c · L_c(B) + \\lambda_d · L_d(B, \\hat{X})$$\nThe two regularizations $\\lambda_d$ and $\\lambda_c$ affect the number of clusters that result. For a given value of $\\lambda_d$, as $\\lambda_c$ increases, the number of clusters decreases (coarser granularity). Higher values of $\\lambda_d$ yield more clusters (finer granularity). Notably, these results are robust and yield reasonable results for varying values of the two regularizations.\nDenoising/Imputation Download Code There is not packages to install. It is tensorflow code that is on the github page for the lab. You are able to download a zip file of the repository and save it to a directory called code. We will reference this for the functions to run SAUCIE.\n## Get code from github and download to code directory !mkdir code !wget https://github.com/KrishnaswamyLab/SAUCIE/archive/master.zip -O code/master.zip !cd code; unzip master.zip !cd ..  Download 10x PBMC data We will use the PBMC data from the 10x website as our test data. You can download this and place it in a directory called data.\n!mkdir data !wget https://s3-us-west-2.amazonaws.com/10x.files/samples/cell/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz -O data/pbmc3k_filtered_gene_bc_matrices.tar.gz !cd data; tar -xzf pbmc3k_filtered_gene_bc_matrices.tar.gz !cd ..  Requirements You will also need to have the following python modules installed to run this.\n## Python3 scanpy louvain tensorflow 1.4.0 numpy 1.13.3 scipy 1.1.0  Note: all requirements automatically satisfied in colab.research.google.com except for scanpy and louvain.\n%%time ## this takes about 5 minutes ## installing scanpy and louvain !pip install scanpy louvain  #!/bin/usr/python3 import scanpy.api as sc import numpy as np import pandas as pd import scipy.io import sys ## switch to code path to load module sys.path.insert(0, 'code/SAUCIE-master') from model import SAUCIE from loader import Loader  adata = sc.read_10x_mtx( './data/filtered_gene_bc_matrices/hg19/', # the directory with the `.mtx` file var_names='gene_symbols') # use gene symbols for the variable names (variables-axis index)  ## checking shape of data adata.X  ## transform to numpy array for running the model ## cells by genes data_np = adata.X.toarray() initial_index = adata.obs.index gene_names = adata.var_names  ## making sure shape is the same data_np.shape  Scanpy/Seurat Tutorial of PBMC Reference\nPreprocess adata.var_names_make_unique() # this is unnecessary if using 'gene_ids' # basic filtering sc.pp.filter_cells(adata, min_genes=200) sc.pp.filter_genes(adata, min_cells=3) # identifying mito genes mito_genes = adata.var_names.str.startswith('MT-') # for each cell compute fraction of counts in mito genes vs. all genes # the `.A1` is only necessary as X is sparse (to transform to a dense array after summing) adata.obs['percent_mito'] = np.sum( adata[:, mito_genes].X, axis=1).A1 / np.sum(adata.X, axis=1).A1 # add the total counts per cell as observations-annotation to adata adata.obs['n_counts'] = adata.X.sum(axis=1).A1 ## filtering out lowly expressed genes adata = adata[adata.obs['n_genes'] \u0026lt; 2500, :] adata = adata[adata.obs['percent_mito'] \u0026lt; 0.05, :] ## normalize data sc.pp.normalize_per_cell(adata, counts_per_cell_after=1e4) sc.pp.log1p(adata) adata.raw = adata  ## identifying and filtering to highly variable genes sc.pp.highly_variable_genes(adata, min_mean=0.0125, max_mean=3, min_disp=0.5) adata = adata[:, adata.var['highly_variable']] ## regressing out umi and mito sc.pp.regress_out(adata, ['n_counts', 'percent_mito']) ## scaling gene expressiong data sc.pp.scale(adata, max_value=10)  PCA sc.tl.pca(adata, svd_solver='arpack')  Neighborhood Graph sc.pp.neighbors(adata, n_neighbors=10, n_pcs=40)  Cluster sc.tl.louvain(adata)  sc.tl.paga(adata) sc.pl.paga(adata, plot=False) # remove `plot=False` if you want to see the coarse-grained graph sc.tl.umap(adata, init_pos='paga')  Identify Cell Types  new_cluster_names = [ 'CD4 T', 'CD14+ Monocytes', 'B', 'CD8 T', 'NK', 'FCGR3A+ Monocytes', 'Dendritic', 'Megakaryocytes'] adata.rename_categories('louvain', new_cluster_names)  ## Plotting with UMAP sc.pl.umap(adata, color = 'louvain', legend_loc = 'on data')  SAUCIE Input Parameters  SAUCIE(input_dim, lambda_b=0, lambda_c=0, layer_c=0, lambda_d=0, layers=[512,256,128,2], activation=lrelu, learning_rate=.001, restore_folder='', save_folder='', limit_gpu_fraction=.3, no_gpu=False):   \u0026quot;\u0026quot;\u0026quot; The SAUCIE model. :param input_dim: the dimensionality of the data :param lambda_b: the coefficient for the MMD regularization :param lambda_c: the coefficient for the ID regularization :param layer_c: the index of layer_dimensions that ID regularization should be applied to (usually len(layer_dimensions)-2) :param lambda_d: the coefficient for the intracluster distance regularization :param activation: the nonlinearity to use in the hidden layers :param loss: the loss function to use, one of 'mse' or 'bce' :param learning_rate: the learning_rate to use while training :param restore_folder: string of the directory where a previous model is saved, if present will return a new Python object with the old SAUCIE tensorflow graph :param save_folder: string of the directory to save SAUCIE to by default when save() is called) \u0026quot;\u0026quot;\u0026quot;  Training on PBMC Data %%time ## takes about 35 minutes on just CPU runtime at 1000 steps ## takes less than 1 minutes with GPU runtime at 1000 steps. scales linearly, eg. 10000 steps ~ 10 minutes ## https://github.com/KrishnaswamyLab/SAUCIE#usage saucie = SAUCIE(input_dim = data_np.shape[1], lambda_b=0, # default: 0 lambda_c=0, # default: 0 layer_c=0, # default: 0 lambda_d=0, # default: 0 layers=[512,256,128,2], # default: [512,256,128,2] activation='lrelu', # default: lrelu learning_rate=.001, # defaul: .001 restore_folder='', # defaul: '' save_folder='', # default: '' limit_gpu_fraction=.3, # default .3 no_gpu=False) # default: False loadtrain = Loader(data_np, shuffle=True) saucie.train(loadtrain, steps=1000)  Loading Output ## Load results loadeval = Loader(data_np, shuffle=False) embedding = saucie.get_embedding(loadeval) number_of_clusters, clusters = saucie.get_clusters(loadeval) reconstruction = saucie.get_reconstruction(loadeval)  When creating this notebook and keeping the parameter settings the same, I go several different number of clusters each time. This ranged from 1 cluster, the full dataset, up to 9 clusters. It seems to be very inconsistent with how many clusters it chooses. You can try and use the reqularization parameters to help with the tuning and selecting of clusters.\n## Joining Embeddings from model adata.obs = adata.obs.join(pd.DataFrame(embedding, index = initial_index, columns =['SAUCIE1', 'SAUCIE2']))  ## make cluster an integer value clusters = [int(c) for c in clusters] ## Joining Cluster labels adata.obs = adata.obs.join(pd.DataFrame(clusters, index = initial_index, columns = ['SAUCIE_Cluster'], dtype = 'category')) ## gives an error related to pandas. Does not effect any of the output.  adata.obs  ## getting the reconstruction (imputed/denoised) data reconstruction_df = adata.obs.join(pd.DataFrame(reconstruction, index = initial_index, columns = gene_names), how='left')  ## only selecting the highly variable genes that were chosen from above reconstruction_df = reconstruction_df[adata.var_names]  ## checking shape matches reconstruction_df.shape  ## checking shape matches adata.X.shape  ## storing the reconstructiong values in the adata layers and naming it SAUCIE adata.layers['SAUCIE'] = reconstruction_df.values  Second Round (page 29)\nTo perform multiple tasks, SAUCIE uses a single architecture as described above, but is run and optimized sequentially. The first run imputes noisy values and corrects batch effects in the original data. This preprocessed data is then run through SAUCIE again to obtain a visualization and to pick out clusters.\nThis goes through the same steps above but adding the suffix \u0026lsquo;_recon\u0026rsquo; to differentiate between the two outputs.\n## https://github.com/KrishnaswamyLab/SAUCIE#usage saucie_recon = SAUCIE(input_dim = reconstruction.shape[1], lambda_b=0, # default: 0 lambda_c=0, # default: 0 layer_c=0, # default: 0 lambda_d=0, # default: 0 layers=[512,256,128,2], # default: [512,256,128,2] activation='lrelu', # default: lrelu learning_rate=.001, # defaul: .001 restore_folder='', # defaul: '' save_folder='', # default: '' limit_gpu_fraction=.3, # default .3 no_gpu=False) # default: False loadtrain_recon = Loader(reconstruction, shuffle=True) saucie_recon.train(loadtrain_recon, steps=1000)  ## Load results loadeval_recon = Loader(reconstruction, shuffle=False) embedding_recon = saucie_recon.get_embedding(loadeval_recon) number_of_clusters_recon, clusters_recon = saucie_recon.get_clusters(loadeval_recon) reconstruction_recon = saucie_recon.get_reconstruction(loadeval_recon)  ## Joining Embeddings from model adata.obs = adata.obs.join(pd.DataFrame(embedding_recon, index = initial_index, columns =['SAUCIE1_recon', 'SAUCIE2_recon']))  ## make cluster an integer value clusters_recon = [int(c) for c in clusters_recon] ## Joining Cluster labels adata.obs = adata.obs.join(pd.DataFrame(clusters_recon, index = initial_index, columns = ['SAUCIE_Cluster_recon'], dtype = 'category')) ## gives an error related to pandas. Does not effect any of the output.  reconstruction_df = adata.obs.join(pd.DataFrame(reconstruction_recon, index = initial_index, columns = gene_names), how='left') reconstruction_df = reconstruction_df[adata.var_names] adata.layers['SAUCIE_recon'] = reconstruction_df.values  Compare Clustering Lots of varying results with the clustering. This happens to be the latest run. It seems to be the best of what I have seen so far as well.\nLouvain Labels vs SAUCIE Clusters (w/o imputation) pd.crosstab(adata.obs.louvain, adata.obs.SAUCIE_Cluster)  Louvain Labels vs SAUCIE Clusters using Imputation as input pd.crosstab(adata.obs.louvain, adata.obs.SAUCIE_Cluster_recon)  SAUCIE Clusters (w/o imputation) vs SAUCIE Clusters (w imputation) pd.crosstab(adata.obs.SAUCIE_Cluster, adata.obs.SAUCIE_Cluster_recon)  Compare Visualizations SAUCIE w/o Imputation sc.pl.scatter(adata, 'SAUCIE1', 'SAUCIE2', color = 'SAUCIE_Cluster')  SAUCIE w/ Imputation sc.pl.scatter(adata, 'SAUCIE1_recon', 'SAUCIE2_recon', color = 'SAUCIE_Cluster_recon')  Comparing Clusters on UMAP Dimensions sc.pl.umap(adata, color = ['louvain', 'SAUCIE_Cluster', 'SAUCIE_Cluster_recon'])    ","date":1550243685,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550243685,"objectID":"1a29905771ebbdb96ead462376e0f7c2","permalink":"https://kdgosik.netlify.com/tutorial/journal_club/","publishdate":"2019-02-15T10:14:45-05:00","relpermalink":"/tutorial/journal_club/","section":"tutorial","summary":"SAUCIE Journal Club  Reference Biorxiv  Exploring Single-Cell Data with Deep Multitasking Neural Networks\nPreivew of the paper on biorxiv.\nDescription Our unsupervised architecture, called SAUCIE (Sparse Autoencoder for Unsupervised Clustering, Imputation, and Embedding), simultaneously performs several key tasks for single-cell data analysis including 1) clustering, 2) batch correction, 3) visualization, and 4) denoising/imputation. SAUCIE is trained to recreate its own input after reducing its dimensionality in a 2-D embedding layer which can be used to visualize the data.","tags":["python","autoencoder"],"title":"Journal Club","type":"docs"},{"authors":null,"categories":["R"],"content":" R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\n ggplot(cars, aes(speed, dist)) + geom_point() + geom_smooth(method=\u0026#39;lm\u0026#39;,formula=y~x)  Figure 1: A ggplot.   ","date":1550188800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550188800,"objectID":"3c2213496dad1368730088d44673e998","permalink":"https://kdgosik.netlify.com/post/r-markdown-hello/","publishdate":"2019-02-15T00:00:00Z","relpermalink":"/post/r-markdown-hello/","section":"post","summary":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.","tags":["ggplot","regression"],"title":"R Markdown, Hello!","type":"post"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536465600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536465600,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"https://kdgosik.netlify.com/tutorial/example/","publishdate":"2018-09-09T00:00:00-04:00","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":[],"categories":null,"content":"Click on the Slides button above to view the built-in slides feature.\n Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483246800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483246800,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"https://kdgosik.netlify.com/talk/example/","publishdate":"2017-01-01T00:00:00-05:00","relpermalink":"/talk/example/","section":"talk","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":"","date":1461729600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461729600,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://kdgosik.netlify.com/project/external-project/","publishdate":"2016-04-27T00:00:00-04:00","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461729600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461729600,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"https://kdgosik.netlify.com/project/internal-project/","publishdate":"2016-04-27T00:00:00-04:00","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":[],"categories":null,"content":" Academic makes it easy to create a beautiful website for free using Markdown. Customize anything on your site with widgets, themes, and language packs.\nFollow our easy step by step guide to learn how to build your own free website with Academic. Check out the personal demo or the business demo of what you\u0026rsquo;ll get in less than 10 minutes.\n View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt   \nKey features:\n Easily manage various content including homepage, blog posts, publications, talks, and projects Extensible via color themes and widgets/plugins Write in Markdown for easy formatting and code highlighting, with LaTeX for mathematical expressions Social/academic network linking, Google Analytics, and Disqus comments Responsive and mobile friendly Simple and refreshing one page design Multilingual and easy to customize  Color Themes Academic is available in different color themes and font themes.\n         Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Quick install using your web browser  Install Academic with Netlify  Netlify will provide you with a customizable URL to access your new site  On GitHub, go to your newly created academic-kickstart repository and edit config.toml to personalize your site. Shortly after saving the file, your site will automatically update Read the Quick Start Guide to learn how to add Markdown content. For inspiration, refer to the Markdown content which powers the Demo  Install with Git Prerequisites:\n Download and install Git Download and install Hugo   Fork the Academic Kickstart repository and clone your fork with Git:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website  Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace sourcethemes with your GitHub username.\n Initialize the theme:\ncd My_Website git submodule update --init --recursive   Install with ZIP  Download and extract Academic Kickstart Download and extract the Academic theme to the themes/academic/ folder from the above step  Install with RStudio View the guide to installing Academic with RStudio\nQuick start  If you installed on your computer, view your new website by running the following command:\nhugo server  Now visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\n Read the Quick Start Guide to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the Markdown content which powers the Demo\n Build your site by running the hugo command. Then host it for free using Github Pages or Netlify (refer to the first installation method). Alternatively, copy the generated public/ directory (by FTP, Rsync, etc.) to your production web server (such as a university\u0026rsquo;s hosting service).\n  Updating Feel free to star the project on Github to help keep track of updates and check out the release notes prior to updating your site.\nBefore updating the framework, it is recommended to make a backup of your entire website directory (or at least your themes/academic directory) and record your current version number.\nBy default, Academic is installed as a Git submodule which can be updated by running the following command:\ngit submodule update --remote --merge  Check out the update guide for full instructions and alternative methods.\nFeedback \u0026amp; Contributing Please use the issue tracker to let me know about any bugs or feature requests, or alternatively make a pull request.\nFor support, head over to the Hugo discussion forum.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461124800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515819600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://kdgosik.netlify.com/post/getting-started/","publishdate":"2016-04-20T00:00:00-04:00","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website or blog in under 10 minutes.","tags":["Academic"],"title":"Academic: the website designer for Hugo","type":"post"},{"authors":["GA Cushen"],"categories":null,"content":"More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n","date":1441080000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441080000,"objectID":"d77fa4a74076ffcd7ca6c21cfc27a4b2","permalink":"https://kdgosik.netlify.com/publication/person-re-id/","publishdate":"2015-09-01T00:00:00-04:00","relpermalink":"/publication/person-re-id/","section":"publication","summary":"Person re-identification is a critical security task for recognizing a person across spatially disjoint sensors. Previous work can be computationally intensive and is mainly based on low-level cues extracted from RGB data and implemented on a PC for a fixed sensor network (such as traditional CCTV). We present a practical and efficient framework for mobile devices (such as smart phones and robots) where high-level semantic soft biometrics are extracted from RGB and depth data. By combining these cues, our approach attempts to provide robustness to noise, illumination, and minor variations in clothing. This mobile approach may be particularly useful for the identification of persons in areas ill-served by fixed sensors or for tasks where the sensor position and direction need to dynamically adapt to a target. Results on the BIWI dataset are preliminary but encouraging. Further evaluation and demonstration of the system will be available on our website.","tags":[],"title":"A Person Re-Identification System For Mobile Devices","type":"publication"},{"authors":null,"categories":["R"],"content":" R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   ","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"https://kdgosik.netlify.com/post/2015-07-23-r-rmarkdown/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":["GA Cushen","MS Nixon"],"categories":null,"content":"More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n","date":1372651200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372651200,"objectID":"2b4d919e3cf73dfcd0063c88fe01cb00","permalink":"https://kdgosik.netlify.com/publication/clothing-search/","publishdate":"2013-07-01T00:00:00-04:00","relpermalink":"/publication/clothing-search/","section":"publication","summary":"We present a mobile visual clothing search system whereby a smart phone user can either choose a social networking photo or take a new photo of a person wearing clothing of interest and search for similar clothing in a retail database. From the query image, the person is detected, clothing is segmented, and clothing features are extracted and quantized. The information is sent from the phone client to a server, where the feature vector of the query image is used to retrieve similar clothing products from online databases. The phone's GPS location is used to re-rank results by retail store location. State of the art work focuses primarily on the recognition of a diverse range of clothing offline and pays little attention to practical applications. Evaluated on a challenging dataset, the system is relatively fast and achieves promising results.","tags":[],"title":"Mobile visual clothing search","type":"publication"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"https://kdgosik.netlify.com/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]